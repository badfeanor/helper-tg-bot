import telebot
import datetime
import requests
import re

from bs4 import BeautifulSoup as bs
from settings import config

bot = telebot.TeleBot(config.BOT_TOKEN, parse_mode="markdown")

@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç ‚úåÔ∏è, —Å–µ–≥–æ–¥–Ω—è " + str(datetime.date.today()) + ". \
    –ë–æ—Ç –¥–µ–ª–∏—Ç—Å—è —Å –≤–∞–º–∏ –∫—É—Ä—Å–æ–º –≤–∞–ª—é—Ç —Å —Å–∞–π—Ç–∞ –¶–ë. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /currency, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –≤–∞–ª—é—Ç—É.")

@bot.message_handler(commands=["currency"])
def currency(message):
    markup = telebot.types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)

    button_1 = telebot.types.KeyboardButton("–ö—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞ –°–®–ê üí≤")
    button_2 = telebot.types.KeyboardButton("–ö—É—Ä—Å –ï–≤—Ä–æ üí∂")
    button_3 = telebot.types.KeyboardButton("–ö—É—Ä—Å –§—É–Ω—Ç–∞ —Å—Ç–µ—Ä–ª–∏–Ω–≥–æ–≤ üí∑")
    button_4 = telebot.types.KeyboardButton("–ö—É—Ä—Å –ë–µ–ª–æ—Ä—É—Å—Å–∫–æ–≥–æ —Ä—É–±–ª—è üáßüáæ")
    button_5 = telebot.types.KeyboardButton("–ù–∞–∑–∞–¥")

    markup.add(button_1, button_2, button_3, button_4, button_5)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É:", reply_markup=markup)

@bot.message_handler(content_types=["text"])
def reply(message):
    match message.text:
        case "–ö—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞ –°–®–ê üí≤":
            bot.send_message(message.chat.id, get_currency(actual_currency="–î–æ–ª–ª–∞—Ä –°–®–ê", date_to_parse=datetime.date.today()))
        case "–ö—É—Ä—Å –ï–≤—Ä–æ üí∂":
            bot.send_message(message.chat.id, get_currency(actual_currency="–ï–≤—Ä–æ", date_to_parse=datetime.date.today()))
        case "–ö—É—Ä—Å –§—É–Ω—Ç–∞ —Å—Ç–µ—Ä–ª–∏–Ω–≥–æ–≤ üí∑":
            bot.send_message(message.chat.id, get_currency(actual_currency="–§—É–Ω—Ç —Å—Ç–µ—Ä–ª–∏–Ω–≥–æ–≤", date_to_parse=datetime.date.today()))
        case "–ö—É—Ä—Å –ë–µ–ª–æ—Ä—É—Å—Å–∫–æ–≥–æ —Ä—É–±–ª—è üáßüáæ":
            bot.send_message(message.chat.id, get_currency(actual_currency="–ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π —Ä—É–±–ª—å", date_to_parse=datetime.date.today()))
        case "–ù–∞–∑–∞–¥":
            # –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
            bot.send_message(message.chat.id, "–í—ã –∑–∞–∫—Ä—ã–ª–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É. –û—Ç–ø—Ä–∞–≤—å—Ç–µ */currency*, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.", reply_markup=types.ReplyKeyboardRemove())
        case _:
            bot.send_message(message.chat.id, "–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—É—é –º–Ω–µ –∫–æ–º–∞–Ω–¥—É. –û—Ç–ø—Ä–∞–≤—å—Ç–µ */start* –¥–ª—è –Ω–∞—á–∞–ª–∞ –æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º.")

def get_currency(actual_currency: str, date_to_parse) -> str:
    """
    –ü–∞—Ä—Å–∏–Ω–≥ –∫—É—Ä—Å–∞ –¶–ë. –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–π –∫—É—Ä—Å —É–∂–µ –ø–∞—Ä—Å–∏–ª—Å—è, —Ç–æ –¥–∞–Ω–Ω—ã–µ –≤–æ–∑—å–º—É—Ç—Å—è –∏–∑ –∫—ç—à–∞.
    :param actual_currency: –ù–∞–∑–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã.
    :param date_to_parse: –î–∞—Ç–∞ –∫—É—Ä—Å–∞.
    :return: –¢–µ–∫—Å—Ç —Å –∏–º–µ–Ω–µ–º –≤–∞–ª—é—Ç—ã –∏ –µ—ë –∫—É—Ä—Å–æ–º.
    """
    day, month, year = date_to_parse.day, date_to_parse.month, date_to_parse.year
    rate_cache = {}
    compiled_letters_pattern = re.compile(r"[–∞-—è–ê-—è]+")
    compiled_numbers_pattern = re.compile(r"\d+")

    currency = rate_cache.get(f"{day} {month} {year} {actual_currency}")

    if currency:
        return f"–ö—É—Ä—Å *{currency[0]}* –Ω–∞ {day}.{month}.{year}: {currency[1]}"

    url = f"https://cbr.ru/scripts/XML_daily.asp?date_req={day}/{month}/{year}"

    request = requests.get(url)
    soup = bs(request.text, "lxml")

    for tag in soup.findAll("valute"):
        result = tag.get_text(strip=True)
        currency_name = " ".join(compiled_letters_pattern.findall(result))
        numbers = compiled_numbers_pattern.findall(result)

        price = f"{numbers[-2]}.{numbers[-1]}"

        if actual_currency in currency_name:
            rate_cache[f"{day} {month} {year} {actual_currency}"] = (currency_name, price)
            return f"–ö—É—Ä—Å *{currency_name}* –Ω–∞ {day}.{month}.{year}: {price}"

bot.infinity_polling()